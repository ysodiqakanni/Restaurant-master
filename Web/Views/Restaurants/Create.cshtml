@model Web.Models.CreateRestaurantViewModel
@{
    ViewData["Title"] = "Create";
}

<h2>Create new restaurant</h2>

@using (Html.BeginForm("Create", "Restaurants", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="text-danger">
        @Html.ValidationSummary()
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(m => m.Name)
        </div>
        <div class=" col-md-6">
            @Html.EditorFor(m => m.Name)
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.DisplayNameFor(m => m.Address)
        </div>
        <div class=" col-md-6">
            @Html.EditorFor(m => m.Address)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-2">
            @Html.DisplayNameFor(m => m.PhoneNumber)
        </div>
        <div class=" col-md-6">
            @Html.EditorFor(m => m.PhoneNumber)
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.DisplayNameFor(m => m.Latitude)
        </div>
        <div class=" col-md-6">
            @Html.EditorFor(m => m.Latitude)
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.DisplayNameFor(m => m.Longitude)
        </div>
        <div class=" col-md-6">
            @Html.EditorFor(m => m.Longitude)
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-2">
            @Html.DisplayNameFor(m => m.Priority)
        </div>
        <div class=" col-md-6">
            @Html.EditorFor(m => m.Priority)
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            Select Area
        </div>
        <div class=" col-md-10">
            @Html.DropDownList("AreaId", new SelectList(ViewBag.AreaId, "Id", "Name"), "Select")
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            Restaurant Category
        </div>
        <div class=" col-md-10">
            @Html.DropDownList("RestaurantCategoryId", new SelectList(ViewBag.RestaurantCategoryId, "Id", "Name"), "Select")
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.DisplayNameFor(m => m.Description)
        </div>
        <div class=" col-md-10">
            @Html.TextAreaFor(m => m.Description)
        </div>
    </div>




    <button id="addNewImage" type="button">Add Image</button>
    <br /><br />
    <table id="images-table">
        <tbody>
        </tbody>
    </table>
    <hr />

    <button id="addNewHours" type="button">Add New Working Hours</button>
    <table id="working-hours-table">
        <tbody></tbody>
    </table>

    <hr />
    <div>
        <input type="submit" value="Submit" class="btn btn-primary btn-lg"/>
    </div>
}


<script src="~/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript">
    var hidden = '@Html.Hidden("Images.Index", "{id}")';
    var priorityHtml = '<input type="number" placeholder="Priority" name="Images[{id}].ImagePriority"/>';//   '@Html.TextBox("Images[{id}].ImagePriority")';
    var fileHtml = ' <input id="Images[{id}].File" name="Images[{id}].ImageUrl" type="file" accept="image/x-png,image/gif,image/jpeg" required/>';//  '@Html.Editor("Images[{id}].ImageUrl")';

    $("#addNewImage").on("click", function () {
            var time = Date.now();

            var deleteHtml = "<button type='button' onclick='deleteImageRow(this)' style='color:red'>Delete</button>";

            $("#images-table").find("tbody")
             .append($("<tr><td>" + hidden.replace("{id}", time) + deleteHtml + "</td>" +
                 "<td>" + priorityHtml.replace("{id}", time) + "</td>" +
                 "<td>" + fileHtml.replace("{id}", time) + "</td></tr>"));
    });


    function deleteImageRow(el) {
        if (confirm('Are you sure you want to remove this record?')) {
            $(el).closest("tr").remove();
        }
    }

    var hiddenHour = '@Html.Hidden("WorkingHours.Index", "{id}")';
    var dayHtml = '<input type="text" placeholder="Day" name="WorkingHours[{id}].Day"/>';
    var fromTimeHtml = '<input type="text" placeholder="From" name="WorkingHours[{id}].FromTime"/>';
    var toTimeHtml = '<input type="text" placeholder="To" name="WorkingHours[{id}].ToTime"/>';

    $("#addNewHours").on("click", function () {
        var time = Date.now();

        var deleteHtml = "<button type='button' onclick='deleteWorkingHourRow(this)' style='color:red'>Delete</button>";

        $("#working-hours-table").find("tbody")
            .append($("<tr><td>" + hiddenHour.replace("{id}", time) + deleteHtml + "</td>" +
                "<td>" + dayHtml.replace("{id}", time) + "</td>" +
                "<td>" + fromTimeHtml.replace("{id}", time) + "</td>"+
                "<td>" + toTimeHtml.replace("{id}", time) + "</td></tr>"
            ));
    });

    function deleteWorkingHourRow(el) {
        if (confirm('Are you sure you want to remove this record?')) {
            $(el).closest("tr").remove();
        }
    }

    //
    //Image reader
    //

    $(document).ready(function () {
        $(".imgFile").change(function () {
            var File = this.files;
            if (File && File[0]) {
                ReadImage(File[0]);
            }
        })
    })

    var ReadImage = function (file) {
        var reader = new FileReader;
        var image = new Image;

        reader.readAsDataURL(file);
        reader.onload = function (_file) {
            image.src = _file.target.result;
            image.onload = function () {
                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 1024) + "KB";
                $("#targetImg").attr('src', _file.target.result);
                $("#imgPreview").show();
            }
        }
    }
</script>